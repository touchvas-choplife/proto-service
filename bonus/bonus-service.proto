// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option go_package = "github.com/touchvas-choplife/bonus-service/app/grpc/bonus";
package protobuf;

service Bonus {

  // Sends GetOdds status request
  rpc AwardBonus (AwardBonusRequest) returns (GeneralResponse){}

  // PlaceBonusBet place a bonus bet
  rpc PlaceBonusBet(UserBet) returns (PlaceBetResponse){}

  // BonusBetEligibility checks if player is eligible to use bonus for this bet
  rpc BonusBetEligibility(UserBet) returns (BonusBetEligibilityResponse){}

  // PlaceCasinoBonusBet place casino bet with bonus
  rpc PlaceCasinoBonusBet(CasinoBet) returns (PlaceCasinoBetResponse){}

  // UpdateBetID updated the betID after placing a bonus bet
  rpc UpdateBetID(UpdateBetIDRequest) returns (GeneralResponse){}

  // DebitBonus debit bonus wallet
  rpc DebitBonus(BonusDebitRequest) returns (GeneralResponse){}

  // BonusBalance gets bonus balance
  rpc BonusBalance(BonusBalanceRequest) returns (BonusBalanceResponse){}

  // Ping health check
  rpc Ping (BonusPing) returns (BonusPong) {}
}

message BonusPing {}

message BonusPong {
  int64 Status = 1;
  string Data = 2;
}

message UpdateBetIDRequest {
  int64 TransactionID  = 1;
  int64 BetID  = 2;
  int64 ID  = 3;
  string Description = 4;
}

message GeneralResponse {
  string description = 1;
  int32 status = 2;
}

message AwardBonusRequest {
  int64 BonusId = 1;
  int64 ProfileID = 2;
  float Amount = 3;
  float BaseValue = 4;
  int64 TransactionID = 5;
  string Description = 6;
  string BonusType = 7;
}

message UserBet {
  repeated BetSlip BetSlip = 1;
  int64 ProfileID = 2;
  float Stake = 3;
  float TotalOdds = 4;
  int32 BonusId = 5;
  string BonusCode = 6;
  string UTMSource = 7;
  string Campaign = 8;
  string Medium = 9;
  string IpAddress = 10;
  int64 BetID = 11;
  string Locale = 12;
  bool WithCash = 13;
}

message CasinoBet {
  int64 ProfileID = 1;
  float stake = 2;
  int64 ProviderID = 3;
  string GameID = 4;
}

message PlaceBetResponse {
  int64 TransactionID = 1;
  int64 status = 2;
  string statusDescription = 3;
  int64 PossibleWin = 4;
  float CashDeducted = 5;
  float BonusDeducted = 6;
  float BonusBalance = 7;
  float CashBalance = 8;
  int64 BetID = 9;
}

message PlaceCasinoBetResponse{
  int64 TransactionID = 1;
  int64 status = 2;
  string statusDescription = 3;
  int64 PossibleWin = 4;
  float CashDeducted = 5;
  float BonusDeducted = 6;
  float BonusBalance = 7;
  float CashBalance = 8;
  float MinimumBonusOdds = 9;
  int64 BetID = 10;
}

message BetSlip {
  int64 eventId = 1;
  int32 producerId = 2;
  float odds = 3;
  int64 sportId = 4;
}

message BonusDebitRequest {
  int64 BonusId = 1;
  int64 ProfileID = 2;
  float Amount = 3;
  int64 TransactionID = 4;
  string Description = 5;
  string BonusType = 6;
}

message BonusBalanceRequest {
  int64 ProfileID = 1;
}

message BonusBalanceResponse {
  float Balance = 1;
  string ExpiryDate = 2;
}

message BonusBetEligibilityResponse {
  int64 status = 1;
  string statusDescription = 2;
}
