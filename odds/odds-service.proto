// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option go_package = "github.com/touchvas-choplife/odds-service/app/grpc/odds";
package protobuf;

service Odds {
  rpc GetOdds (GetOddsRequest) returns (GetOddsReply) {}
  rpc GetOutcome (GetOutcomeRequest) returns (GetOutcomeReply) {}
  rpc GetMarket (GetMarketRequest) returns (Market) {}
  rpc GetProducerStatus (ProducerStatusRequest) returns (ProducerStatusReply) {}
  rpc GetProbability (GetOddsRequest) returns (Probability) {}
  rpc Ping(HealthCheckRequest) returns (HealthCheckResponse);
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

message PingRequest {}

message PongRequest {
  int64 Status = 1;
  string Data = 2;
}

message GetOddsRequest {
  int32 producerID = 1;
  int64 eventID = 2;
  int32 marketID = 3;
  string specifier = 4;
  string outcomeID = 5;
}

message GetMarketRequest {
  int32 producerID = 1;
  int32 eventID = 2;
  int32 marketID = 3;
  string specifier = 4;
}

message GetOddsReply {
  float odds = 1;
  int32 status = 2;
  string statusName = 3;
  int32 active = 4;
  int64 matchId = 5;
  int64 marketId = 6;
  string marketName = 7;
  string specifier = 8;
  string outcomeId = 9;
  string outcomeName = 10;
  string matchName = 11;
  int64 sportId = 12;
  int64 OddId = 13;
  int64 ProducerId = 14;
  int64 GameID = 15;
}

message ProducerStatusRequest {
  int32 producer = 1;
}

message ProducerStatusReply {
  int32 status = 1;
}

message Probability {
  float probability = 1;
}

message Outcome {
  float odds = 1;
  int32 active = 2;
  string OutcomeID = 3;
  string outcomeName = 4;
  float Probability = 5;
}

message Market {
  string MarketName = 1;
  int64 MarketID = 2;
  string Specifier = 3;
  int64 Status = 4;
  string StatusName = 5;
  repeated Outcome Outcome = 6;
}

message GetOutcomeRequest {
  int64 producerID = 1;
  int64 matchID = 2;
  int64 marketID = 3;
  string specifier = 4;
}

message GetOutcomeReply {
  repeated Outcome Outcome = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}

message HealthCheckRequest {
  string service = 1;
}